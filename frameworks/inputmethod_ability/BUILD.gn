# Copyright (c) 2021 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/inputmethod/imf/inputmethod.gni")
import("//build/ohos.gni")

config("inputmethod_ability_native_config") {
  visibility = [ ":*" ]
  include_dirs = [
    "include",
    "${inputmethod_path}/frameworks/inputmethod_controller/include",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/include",
    "${inputmethod_path}/services/include",
  ]
}
config("inputmethod_ability_native_public_config") {
  visibility = []
  include_dirs = [
    "include",
    "${inputmethod_path}/services/include",
  ]
}

ohos_shared_library("inputmethod_ability") {
  sources = [
    "${inputmethod_path}/frameworks/inputmethod_controller/src/input_data_channel_proxy.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_editor_attribute.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_input_method_engine.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_input_method_engine_listener.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_input_method_engine_registry.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_input_method_engine_utils.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_keyboard_controller.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_keyboard_delegate.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_keyboard_delegate_listener.cpp",
    "${inputmethod_path}/interfaces/kits/js/napi/inputmethodengine/src/js_text_input_client.cpp",
    "${inputmethod_path}/services/src/input_attribute.cpp",
    "${inputmethod_path}/services/src/input_channel.cpp",
    "${inputmethod_path}/services/src/input_control_channel_proxy.cpp",
    "${inputmethod_path}/services/src/input_method_property.cpp",
    "${inputmethod_path}/services/src/keyboard_type.cpp",
    "${inputmethod_path}/services/src/message.cpp",
    "${inputmethod_path}/services/src/message_handler.cpp",
    "../inputmethod_controller/src/input_method_system_ability_proxy.cpp",
    "src/input_method_ability.cpp",
    "src/input_method_agent_proxy.cpp",
    "src/input_method_agent_stub.cpp",
    "src/input_method_core_proxy.cpp",
    "src/input_method_core_stub.cpp",
  ]

  configs = [ ":inputmethod_ability_native_config" ]

  deps = [
    "${ability_runtime_inner_api_path}/ability_manager:ability_manager",
    "${ability_runtime_inner_api_path}/app_manager:app_manager",
    "//base/global/resource_management/frameworks/resmgr:global_resmgr",
    "//foundation/arkui/napi/:ace_napi",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_core:ipc_core",
    "//foundation/communication/ipc/interfaces/innerkits/ipc_single:ipc_single",
    "//foundation/distributedschedule/samgr/interfaces/innerkits/samgr_proxy:samgr_proxy",
    "//foundation/multimodalinput/input/frameworks/proxy:libmmi-client",
    "//utils/native/base:utils",
  ]

  external_deps = [
    "ability_base:want",
    "ability_runtime:runtime",
    "bundle_framework:appexecfwk_base",
    "bundle_framework:appexecfwk_core",
    "eventhandler:libeventhandler",
    "hiviewdfx_hilog_native:libhilog",
  ]

  public_configs = [ ":inputmethod_ability_native_public_config" ]

  subsystem_name = "inputmethod"
  part_name = "imf"
}
