# Copyright (c) 2025 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//base/inputmethod/imf/inputmethod.gni")
import("//build/ohos.gni")

config("ability_config") {
  visibility = [ ":*" ]

  cflags = []
  if (target_cpu == "arm") {
    cflags += [ "-DBINDER_IPC_32BIT" ]
  }
  defines = [
    "APP_LOG_TAG = \"Ability\"",
    "LOG_DOMAIN = 0xD002200",
  ]
}

config("ability_public_config") {
  visibility = [ ":*" ]
  include_dirs = [ "${inputmethod_path}/frameworks/kits/extension/include" ]
}

ohos_shared_library("cj_inputmethod_extension_ffi") {
  branch_protector_ret = "pac_ret"
  sanitize = {
    boundary_sanitize = true
    cfi = true
    cfi_cross_dso = true
    debug = false
    integer_overflow = true
    ubsan = true
  }
  cflags_cc = [
    "-fdata-sections",
    "-ffunction-sections",
    "-Os",
  ]
  include_dirs = [
    "${inputmethod_path}/frameworks/kits/extension_cj/include",
    "${inputmethod_path}/frameworks/kits/extension/include",
    "${inputmethod_path}/common/include",
  ]

  sources = [
    "${inputmethod_path}/frameworks/kits/extension_cj/src/cj_inputmethod_extension_context.cpp",
    "${inputmethod_path}/frameworks/kits/extension_cj/src/cj_inputmethod_extension_ffi.cpp",
    "${inputmethod_path}/frameworks/kits/extension_cj/src/cj_inputmethod_extension_object.cpp",
    "${inputmethod_path}/frameworks/kits/extension_cj/src/cj_inputmethod_extension.cpp",
  ]
  configs = [ ":ability_config" ]
  public_configs = [
    ":ability_public_config",
    "${inputmethod_path}/interfaces/inner_api/inputmethod_ability:inputmethod_ability_native_public_config",
  ]

  deps = [
    "${inputmethod_path}/common:inputmethod_common",
    "${inputmethod_path}/interfaces/inner_api/inputmethod_ability:input_control_channel_proxy",
    "${inputmethod_path}/interfaces/inner_api/inputmethod_ability:input_method_extension_stub",
    "${inputmethod_path}/interfaces/inner_api/inputmethod_ability:inputmethod_ability",
    "${inputmethod_path}/frameworks/kits/extension:inputmethod_extension"
  ]

  external_deps = [
    "ability_base:configuration",
    "ability_base:want",
    "ability_runtime:ability_context_native",
    "ability_runtime:ability_manager",
    "ability_runtime:ability_start_options",
    "ability_runtime:abilitykit_native",
    "ability_runtime:app_context",
    "ability_runtime:extensionkit_native",
    "ability_runtime:runtime",
    "ability_runtime:cj_ability_context_native",
    "c_utils:utils",
    "eventhandler:libeventhandler",
    "hilog:libhilog",
    "window_manager:libdm",
    "napi:cj_bind_ffi",
    "napi:cj_bind_native",
    "ipc:ipc_napi",
  ]

  innerapi_tags = [ "platformsdk" ]
  subsystem_name = "inputmethod"
  part_name = "imf"
}
