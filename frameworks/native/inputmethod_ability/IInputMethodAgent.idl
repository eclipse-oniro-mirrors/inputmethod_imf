/*
 * Copyright (c) 2025 Huawei Device Co., Ltd.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

sequenceable input_attribute..OHOS.MiscServices.InputAttributeInner;
sequenceable input_method_utils..OHOS.MiscServices.Value;
sequenceable input_method_utils..OHOS.MiscServices.KeyEventValue;
sequenceable input_method_utils..OHOS.MiscServices.ArrayBuffer;
sequenceable input_method_utils..OHOS.MiscServices.ResponseDataInner;
interface OHOS.MiscServices.IKeyEventConsumer;
interface OHOS.MiscServices.IInputMethodAgent {
    [ipccode 0] void DispatchKeyEvent([in] KeyEventValue keyEvent, [in] IKeyEventConsumer consumer);
    void OnCursorUpdate([in] int positionX, [in] int positionY, [in] int height);
    void OnSelectionChange([in] String text, [in] int oldBegin, [in] int oldEnd, [in] int newBegin, [in] int newEnd);
    void SetCallingWindow([in] unsigned int windowId);
    void OnAttributeChange([in] InputAttributeInner attributeInner);
    void SendPrivateCommand([in] Value value);
    void SendMessage([in] ArrayBuffer arraybuffer);
    void DiscardTypingText();
    void ResponseDataChannel([in] unsigned long msgId, [in] int code, [in] ResponseDataInner msg);
    void OnFunctionKey([in] int funcKey);
}
